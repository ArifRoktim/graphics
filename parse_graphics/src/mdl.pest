program = _{ SOI ~ NEWLINE* ~ (statement ~ NEWLINE+)* ~ statement? ~ EOI }

// Only ever matches with 1 pair
statement = {
      push
    | pop
    | display
    | save
    // `move` is a reserved word. Use `translate` instead
    | translate
    | scale
    | rotate
    // `box` is a reserved word. Use `cuboid` instead
    | cuboid
    | sphere
    | torus
    | line
    | constants
    | frames
    | basename
    | vary
    | light
    | mesh
}

// Stack commands
push = { "push" }
pop = { "pop" }

// Misc. commands
display = { "display" }
save = { "save" ~ string }

// Transformations
translate = { "move"  ~ float{3} ~ ident? }
scale =     { "scale" ~ float{3} ~ ident? }
rotate =    { "rotate" ~ axis ~ float ~ ident? }

// Drawing commands
cuboid = { "box"    ~ ident? ~ float{6} ~ ident? }
sphere = { "sphere" ~ ident? ~ float{4} ~ ident? }
torus =  { "torus"  ~ ident? ~ float{5} ~ ident? }
line = { "line" ~ ident? ~ float{3} ~ ident? ~ float{3} ~ ident? }

// animation commands
frames = { "frames" ~ whole }
basename = { "basename" ~ string }
vary = { "vary" ~ ident ~ whole{2} ~ float{2} }

// lighting commands
constants = { "constants" ~ ident ~ float{9} ~ float{3}? }
light = { "light" ~ byte{3} ~ float{3} }

mesh = { "mesh" ~ ident? ~ ":" ~ string }

// atomics
float = @{
    "-"? ~ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT*)?
    | "-"? ~ "." ~ ASCII_DIGIT+
}
// Whole numbers from [0, std::usize::MAX]
whole = @{ ASCII_DIGIT+ }
// Whole numbers from [0, 256)
byte = @{ whole }
ident = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_" | ".")* }
string = @{ ident }
axis = @{ ^"x" | ^"y" | ^"z" }

WHITESPACE = _{ " " }
COMMENT = _{ "//" ~ (!NEWLINE ~ ANY)* }
