program = _{ SOI ~ NEWLINE* ~ (statement ~ NEWLINE+)* ~ statement? ~ EOI }

// Only ever matches with 1 pair
statement = _{
      push
    | pop
    | display
    | save
    // `move` is a reserved word. Use `translate` instead
    | translate
    | scale
    | rotate
    // `box` is a reserved word. Use `cuboid` instead
    | cuboid
    | sphere
    | torus
    | line
    | constants
    | frames
    | basename
    | vary
    | light
    | mesh
}

expr = { "(" ~ term ~ (operation ~ term)* ~ ")" }
//term = _{ number | expr }
// TODO: add variables to expressions
term = _{ ident | number | expr }

operation = _{ add | subtract | multiply | intdivide | divide }
add      = { "+" }
subtract = { "-" }
multiply = { "*" }
divide   = { "/" }
intdivide = { "//" }
//power    = { "^" }

// Statements
// Stack commands
push = { "push" }
pop = { "pop" }

// Misc. commands
display = { "display" }
save = { "save" ~ string }

// Transformations
translate = { "move"  ~ term{3} ~ ident? }
scale =     { "scale" ~ term{3} ~ ident? }
rotate =    { "rotate" ~ axis ~ term ~ ident? }

// Drawing commands
cuboid = { "box"    ~ ident? ~ term{6} ~ ident? }
sphere = { "sphere" ~ ident? ~ term{4} ~ ident? }
torus =  { "torus"  ~ ident? ~ term{5} ~ ident? }
line = { "line" ~ ident? ~ term{3} ~ ident? ~ term{3} ~ ident? }

// animation commands
frames = { "frames" ~ term }
basename = { "basename" ~ string }
vary = { "vary" ~ ident ~ term{2} ~ term{2} }

// lighting commands
constants = { "constants" ~ ident ~ number{9} }
light = { "light" ~ posint{3} ~ number{3} }

mesh = { "mesh" ~ ident? ~ ":" ~ string }

// numeric types and atomics
number = _{ float | negint | posint }
// floating point values
float = @{
    "-"? ~ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT*
    | "-"? ~ "." ~ ASCII_DIGIT+
}
// Integer numbers
negint = @{ "-" ~ ASCII_DIGIT+ }
posint = @{ "+"? ~ ASCII_DIGIT+ }

ident = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_" | ".")* }
string = @{ ident }
axis = @{ ^"x" | ^"y" | ^"z" }

WHITESPACE = _{ " " }
COMMENT = _{ "#" ~ (!NEWLINE ~ ANY)* }
